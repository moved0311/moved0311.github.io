{"version":3,"sources":["webpack:///./src/components/tag.js","webpack:///./src/components/contact.js","webpack:///./src/components/categories.js","webpack:///./src/pages/index.js","webpack:///(webpack)/buildin/module.js"],"names":["Container","styled","ul","StyledTag","li","Tag","children","map","tag","key","Link","a","CommunityContainer","div","Contact","data","useStaticQuery","social","site","siteMetadata","href","github","target","fixed","githubDark","childImageSharp","facebook","cv","StyledLink","Categories","categories","totalCount","to","pageQuery","BlogIndex","location","siteTitle","_","get","posts","title","node","frontmatter","fields","slug","tags","style","marginBottom","rhythm","boxShadow","date","dangerouslySetInnerHTML","__html","description","excerpt","module","exports","webpackPolyfill","deprecate","paths","Object","defineProperty","enumerable","l","i"],"mappings":"4gBAGA,IAAMA,EAAYC,IAAOC,GAAV,KAITC,EAAYF,IAAOG,GAAV,KAoBAC,IARH,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACb,OACE,kBAACN,EAAD,KACGM,GAAYA,EAASC,KAAI,SAAAC,GAAG,OAAI,kBAACL,EAAD,CAAWM,IAAKD,GAAMA,S,ydCV7D,IAAME,EAAOT,IAAOU,EAAV,KAIJC,EAAqBX,IAAOY,IAAV,KAiETC,EAzDC,WACd,IAAMC,EAAOC,yBAAe,aAsCpBC,EAAWF,EAAKG,KAAKC,aAArBF,OACR,OACE,6BACE,kBAACL,EAAD,KACE,kBAACF,EAAD,CAAMU,KAAMH,EAAOI,OAAQC,OAAO,UAChC,kBAAC,IAAD,CAAOC,MAAOR,EAAKS,WAAWC,gBAAgBF,SAEhD,kBAACb,EAAD,CAAMU,KAAMH,EAAOS,SAAUJ,OAAO,UAClC,kBAAC,IAAD,CAAOC,MAAOR,EAAKW,SAASD,gBAAgBF,SAE9C,kBAACb,EAAD,CAAMU,KAAK,aAAaE,OAAO,UAC7B,kBAAC,IAAD,CAAOC,MAAOR,EAAKY,GAAGF,gBAAgBF,Y,0iBCtEhD,IAAMvB,EAAYC,IAAOC,GAAV,KAKTC,EAAYF,IAAOG,GAAV,KAWTwB,EAAa3B,YAAOS,OAAPT,CAAH,KAeD4B,EAXI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpB,OACE,kBAAC9B,EAAD,KACG8B,EAAWvB,KAAI,gBAAGC,EAAH,EAAGA,IAAKuB,EAAR,EAAQA,WAAR,OACd,kBAACH,EAAD,CAAYnB,IAAKD,EAAKwB,GAAE,SAAWxB,GACjC,kBAACL,EAAD,KAAeK,EAAf,KAAuBuB,EAAvB,W,iCC4BGE,GAFEC,UA3CG,SAAC,GAAwB,IAAtBnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SACnBC,EAAYC,IAAEC,IAAIvB,EAAM,0BAA2B,IACnDwB,EAAQF,IAAEC,IAAIvB,EAAM,0BAA2B,IAC/Ce,EAAaO,IAAEC,IAAIvB,EAAM,0BAA2B,IAC1D,OACE,kBAAC,IAAD,CAAQoB,SAAUA,EAAUK,MAAOJ,GACjC,kBAAC,IAAD,CAAKI,MAAM,cACX,kBAAC,EAAD,MACA,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAYV,WAAYA,IACvBS,EAAMhC,KAAI,YAAe,IAAZkC,EAAW,EAAXA,KACND,EAAQC,EAAKC,YAAYF,OAASC,EAAKE,OAAOC,KAC9CC,EAAOR,IAAEC,IAAIG,EAAM,mBAAoB,IAC7C,OACE,6BAAShC,IAAKgC,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWjB,GAAIS,EAAKE,OAAOC,MACjDJ,IAGL,+BAAQC,EAAKC,YAAYQ,MAExBL,GAAQ,kBAAC,IAAD,KAAMA,IAEjB,iCACE,uBACEM,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAAeZ,EAAKa,kBAazC,e,mBCzDtBC,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOjD,WAAUiD,EAAOjD,SAAW,IACxCsD,OAAOC,eAAeN,EAAQ,SAAU,CACvCO,YAAY,EACZxB,IAAK,WACJ,OAAOiB,EAAOQ,KAGhBH,OAAOC,eAAeN,EAAQ,KAAM,CACnCO,YAAY,EACZxB,IAAK,WACJ,OAAOiB,EAAOS,KAGhBT,EAAOE,gBAAkB,GAEnBF","file":"component---src-pages-index-js-ae90ef0b6962f551a34b.js","sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Container = styled.ul`\r\n  display: inline-flex;\r\n  margin-left: 5px;\r\n`\r\nconst StyledTag = styled.li`\r\n  border-radius: 4px;\r\n  border: 1px solid grey;\r\n  padding: 2px 6px;\r\n  margin-right: 5px;\r\n  font-size: 70%;\r\n  font-weight: bold;\r\n  background: #007acc;\r\n  color: white;\r\n  list-style: none;\r\n`\r\n\r\nconst Tag = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      {children && children.map(tag => <StyledTag key={tag}>{tag}</StyledTag>)}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Tag\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  color: white;\r\n`\r\nconst CommunityContainer = styled.div`\r\n  width: 120px;\r\n  height: 32px;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  margin-bottom: 30px;\r\n`\r\n\r\nconst Contact = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query ContactQuery {\r\n      githubDark: file(absolutePath: { regex: \"/github-dark.png/\" }) {\r\n        childImageSharp {\r\n          fixed(width: 32, height: 32) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      facebook: file(absolutePath: { regex: \"/facebook-dark.png/\" }) {\r\n        childImageSharp {\r\n          fixed(width: 32, height: 32) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      cv: file(absolutePath: { regex: \"/cv.png/\" }) {\r\n        childImageSharp {\r\n          fixed(width: 32, height: 32) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            github\r\n            facebook\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { social } = data.site.siteMetadata\r\n  return (\r\n    <div>\r\n      <CommunityContainer>\r\n        <Link href={social.github} target=\"_blank\">\r\n          <Image fixed={data.githubDark.childImageSharp.fixed} />\r\n        </Link>\r\n        <Link href={social.facebook} target=\"_blank\">\r\n          <Image fixed={data.facebook.childImageSharp.fixed} />\r\n        </Link>\r\n        <Link href=\"resume.pdf\" target=\"_blank\">\r\n          <Image fixed={data.cv.childImageSharp.fixed} />\r\n        </Link>\r\n      </CommunityContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Container = styled.ul`\r\n  display: inline-flex;\r\n  margin-left: 5px;\r\n  flex-wrap: wrap;\r\n`\r\nconst StyledTag = styled.li`\r\n  border-radius: 4px;\r\n  border: 1px solid grey;\r\n  padding: 2px 6px;\r\n  margin-right: 5px;\r\n  font-size: 70%;\r\n  font-weight: bold;\r\n  background: #007acc;\r\n  color: white;\r\n  list-style: none;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: white;\r\n`\r\nconst Categories = ({ categories }) => {\r\n  return (\r\n    <Container>\r\n      {categories.map(({ tag, totalCount }) => (\r\n        <StyledLink key={tag} to={`/tags/${tag}`}>\r\n          <StyledTag>{`${tag} (${totalCount})`}</StyledTag>\r\n        </StyledLink>\r\n      ))}\r\n    </Container>\r\n  )\r\n}\r\nexport default Categories\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Contact from \"../components/contact\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Tag from \"../components/tag\"\r\nimport Categories from \"../components/categories\"\r\nimport { rhythm } from \"../utils/typography\"\r\nimport _ from \"lodash\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = _.get(data, \"site.siteMetadata.title\", \"\")\r\n  const posts = _.get(data, \"allMarkdownRemark.edges\", [])\r\n  const categories = _.get(data, \"allMarkdownRemark.group\", [])\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"All posts\" />\r\n      <Contact />\r\n      <Bio />\r\n      <Categories categories={categories} />\r\n      {posts.map(({ node }) => {\r\n        const title = node.frontmatter.title || node.fields.slug\r\n        const tags = _.get(node, \"frontmatter.tags\", [])\r\n        return (\r\n          <article key={node.fields.slug}>\r\n            <header>\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n\r\n              {tags && <Tag>{tags}</Tag>}\r\n            </header>\r\n            <section>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n            </section>\r\n          </article>\r\n        )\r\n      })}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n            tags\r\n          }\r\n        }\r\n      }\r\n      group(field: frontmatter___tags) {\r\n        tag: fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}