{"version":3,"sources":["webpack:///./src/components/tag.js","webpack:///./src/components/contact.js","webpack:///./src/components/categories.js","webpack:///./src/pages/index.js","webpack:///(webpack)/buildin/module.js"],"names":["Container","styled","ul","StyledTag","li","Tag","children","map","tag","key","Link","a","CommunityContainer","div","Contact","data","useStaticQuery","social","site","siteMetadata","href","github","target","fixed","githubDark","childImageSharp","facebook","cv","StyledLink","Categories","categories","totalCount","to","pageQuery","BlogIndex","location","siteTitle","_","get","posts","title","node","frontmatter","fields","slug","tags","style","marginBottom","rhythm","boxShadow","date","dangerouslySetInnerHTML","__html","description","excerpt","module","exports","webpackPolyfill","deprecate","paths","Object","defineProperty","enumerable","l","i"],"mappings":"4gBAGA,IAAMA,EAAYC,IAAOC,GAAV,KAITC,EAAYF,IAAOG,GAAV,KAoBAC,IARH,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACb,OACE,kBAACN,EAAD,KACGM,GAAYA,EAASC,KAAI,SAAAC,GAAG,OAAI,kBAACL,EAAD,CAAWM,IAAKD,GAAMA,S,ydCV7D,IAAME,EAAOT,IAAOU,EAAV,KAIJC,EAAqBX,IAAOY,IAAV,KAiETC,EAzDC,WACd,IAAMC,EAAOC,yBAAe,aAsCpBC,EAAWF,EAAKG,KAAKC,aAArBF,OACR,OACE,6BACE,kBAACL,EAAD,KACE,kBAACF,EAAD,CAAMU,KAAMH,EAAOI,OAAQC,OAAO,UAChC,kBAAC,IAAD,CAAOC,MAAOR,EAAKS,WAAWC,gBAAgBF,SAEhD,kBAACb,EAAD,CAAMU,KAAMH,EAAOS,SAAUJ,OAAO,UAClC,kBAAC,IAAD,CAAOC,MAAOR,EAAKW,SAASD,gBAAgBF,SAE9C,kBAACb,EAAD,CAAMU,KAAK,aAAaE,OAAO,UAC7B,kBAAC,IAAD,CAAOC,MAAOR,EAAKY,GAAGF,gBAAgBF,Y,0iBCtEhD,IAAMvB,EAAYC,IAAOC,GAAV,KAKTC,EAAYF,IAAOG,GAAV,KAWTwB,EAAa3B,YAAOS,OAAPT,CAAH,KAeD4B,EAXI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpB,OACE,kBAAC9B,EAAD,KACG8B,EAAWvB,KAAI,gBAAGC,EAAH,EAAGA,IAAKuB,EAAR,EAAQA,WAAR,OACd,kBAACH,EAAD,CAAYnB,IAAKD,EAAKwB,GAAE,SAAWxB,GACjC,kBAACL,EAAD,KAAeK,EAAf,KAAuBuB,EAAvB,W,iCC4BGE,GAFEC,UA3CG,SAAC,GAAwB,IAAtBnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SACnBC,EAAYC,IAAEC,IAAIvB,EAAM,0BAA2B,IACnDwB,EAAQF,IAAEC,IAAIvB,EAAM,0BAA2B,IAC/Ce,EAAaO,IAAEC,IAAIvB,EAAM,0BAA2B,IAC1D,OACE,kBAAC,IAAD,CAAQoB,SAAUA,EAAUK,MAAOJ,GACjC,kBAAC,IAAD,CAAKI,MAAM,cACX,kBAAC,EAAD,MACA,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAYV,WAAYA,IACvBS,EAAMhC,KAAI,YAAe,IAAZkC,EAAW,EAAXA,KACND,EAAQC,EAAKC,YAAYF,OAASC,EAAKE,OAAOC,KAC9CC,EAAOR,IAAEC,IAAIG,EAAM,mBAAoB,IAC7C,OACE,6BAAShC,IAAKgC,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWjB,GAAIS,EAAKE,OAAOC,MACjDJ,IAGL,+BAAQC,EAAKC,YAAYQ,MAExBL,GAAQ,kBAAC,IAAD,KAAMA,IAEjB,iCACE,uBACEM,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAAeZ,EAAKa,kBAazC,e,mBCzDtBC,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOjD,WAAUiD,EAAOjD,SAAW,IACxCsD,OAAOC,eAAeN,EAAQ,SAAU,CACvCO,YAAY,EACZxB,IAAK,WACJ,OAAOiB,EAAOQ,KAGhBH,OAAOC,eAAeN,EAAQ,KAAM,CACnCO,YAAY,EACZxB,IAAK,WACJ,OAAOiB,EAAOS,KAGhBT,EAAOE,gBAAkB,GAEnBF","file":"component---src-pages-index-js-a70834f48f01b74ef940.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.ul`\n  display: inline-flex;\n  margin-left: 5px;\n`\nconst StyledTag = styled.li`\n  border-radius: 4px;\n  border: 1px solid grey;\n  padding: 2px 6px;\n  margin-right: 5px;\n  font-size: 70%;\n  font-weight: bold;\n  background: #007acc;\n  color: white;\n  list-style: none;\n`\n\nconst Tag = ({ children }) => {\n  return (\n    <Container>\n      {children && children.map(tag => <StyledTag key={tag}>{tag}</StyledTag>)}\n    </Container>\n  )\n}\n\nexport default Tag\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport styled from \"styled-components\"\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: white;\n`\nconst CommunityContainer = styled.div`\n  width: 120px;\n  height: 32px;\n  justify-content: space-between;\n  display: flex;\n  margin-bottom: 30px;\n`\n\nconst Contact = () => {\n  const data = useStaticQuery(graphql`\n    query ContactQuery {\n      githubDark: file(absolutePath: { regex: \"/github-dark.png/\" }) {\n        childImageSharp {\n          fixed(width: 32, height: 32) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      facebook: file(absolutePath: { regex: \"/facebook-dark.png/\" }) {\n        childImageSharp {\n          fixed(width: 32, height: 32) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      cv: file(absolutePath: { regex: \"/cv.png/\" }) {\n        childImageSharp {\n          fixed(width: 32, height: 32) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n            facebook\n          }\n        }\n      }\n    }\n  `)\n\n  const { social } = data.site.siteMetadata\n  return (\n    <div>\n      <CommunityContainer>\n        <Link href={social.github} target=\"_blank\">\n          <Image fixed={data.githubDark.childImageSharp.fixed} />\n        </Link>\n        <Link href={social.facebook} target=\"_blank\">\n          <Image fixed={data.facebook.childImageSharp.fixed} />\n        </Link>\n        <Link href=\"resume.pdf\" target=\"_blank\">\n          <Image fixed={data.cv.childImageSharp.fixed} />\n        </Link>\n      </CommunityContainer>\n    </div>\n  )\n}\n\nexport default Contact\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst Container = styled.ul`\n  display: inline-flex;\n  margin-left: 5px;\n  flex-wrap: wrap;\n`\nconst StyledTag = styled.li`\n  border-radius: 4px;\n  border: 1px solid grey;\n  padding: 2px 6px;\n  margin-right: 5px;\n  font-size: 70%;\n  font-weight: bold;\n  background: #007acc;\n  color: white;\n  list-style: none;\n`\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: white;\n`\nconst Categories = ({ categories }) => {\n  return (\n    <Container>\n      {categories.map(({ tag, totalCount }) => (\n        <StyledLink key={tag} to={`/tags/${tag}`}>\n          <StyledTag>{`${tag} (${totalCount})`}</StyledTag>\n        </StyledLink>\n      ))}\n    </Container>\n  )\n}\nexport default Categories\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Contact from \"../components/contact\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Tag from \"../components/tag\"\nimport Categories from \"../components/categories\"\nimport { rhythm } from \"../utils/typography\"\nimport _ from \"lodash\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = _.get(data, \"site.siteMetadata.title\", \"\")\n  const posts = _.get(data, \"allMarkdownRemark.edges\", [])\n  const categories = _.get(data, \"allMarkdownRemark.group\", [])\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Contact />\n      <Bio />\n      <Categories categories={categories} />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        const tags = _.get(node, \"frontmatter.tags\", [])\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n\n              {tags && <Tag>{tags}</Tag>}\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}