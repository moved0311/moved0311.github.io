{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020-09-21-DP/","result":{"data":{"site":{"siteMetadata":{"title":"Taiyi's Blog"}},"markdownRemark":{"id":"8e690081-8f16-5a95-af67-99e563f26ffc","excerpt":"Dynamic Programming 在寫遞迴時，subset常常被重複計算造成浪費時間。DP使用一張表紀錄已經計算過得subset，若要計算的函數已經出現過在表上，則直接查表不需要再重新計算。 例如使用遞迴計算Fibonacci數列，使用遞迴的時間複雜度是指數級別(exponential)，使用DP…","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Dynamic Programming"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在寫遞迴時，subset常常被重複計算造成浪費時間。DP使用一張表紀錄已經計算過得subset，若要計算的函數已經出現過在表上，則直接查表不需要再重新計算。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"例如使用遞迴計算Fibonacci數列，使用遞迴的時間複雜度是指數級別(exponential)，使用DP則能夠降到線性(linear)。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Fibonacci"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"T(n) = T(n-1) + T(n-2) "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"若使用遞迴方法計算T(5)，下面T(2)~T(4)會被重複計算多次，造成複雜度是指數形式。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"                           T(5)   \n                   /                  \\\n               T(4)                     T(3)   \n             /        \\              /       \\ \n        T(3)        T(2)           T(2)     T(1)\n       /    \\       /    \\        /    \\\n    T(2)   T(1)  T(1) T(0)     T(1)    T(0)\n  /     \\\nT(1)   T(0)\t\t\t"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Implements"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/moved0311/DSA/blob/master/Algorithms/Recursive/fibonacci.js"},"children":[{"type":"text","value":"recursive - fibonacci"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/moved0311/DSA/blob/master/Algorithms/DP/fibonacci.js"},"children":[{"type":"text","value":"dynamic programming - fibonacci"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Reference"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.geeksforgeeks.org/dynamic-programming/"},"children":[{"type":"text","value":"geeksforgeeks - Dynamic Programming"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/house-robber/"},"children":[{"type":"text","value":"leetcode - 198. House Robber"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/house-robber/discuss/156523/From-good-to-great.-How-to-approach-most-of-DP-problems."},"children":[{"type":"text","value":"From good to great. How to approach most of DP problems."}]}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"Dynamic Programming","date":"September 21, 2020","description":null}}},"pageContext":{"slug":"/2020-09-21-DP/","previous":{"fields":{"slug":"/2020-09-13-kruskal/"},"frontmatter":{"title":"Kruslal's Minimum Spanning Tree"}},"next":{"fields":{"slug":"/2020-09-21-PalindromicSubString/"},"frontmatter":{"title":"Palindromic Substrings"}}}},"staticQueryHashes":["1990145124","2841359383"]}